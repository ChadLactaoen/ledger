<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TransactionMapper">

    <resultMap id="Transaction" type="com.lactaoen.ledger.model.Transaction">
        <id property="transactionId" column="transaction_id" />
        <result property="date" column="date" />
        <result property="name" column="name" />
        <result property="price" column="price" />
        <result property="memo" column="memo" />
    </resultMap>

    <resultMap id="RichTransaction" type="com.lactaoen.ledger.model.Transaction" extends="Transaction">
        <association property="category" column="category_id" select="CategoryMapper.getCategoryById" />
        <association property="subcategory" column="subcategory_id" select="CategoryMapper.getCategoryById" />
    </resultMap>

    <select id="getAllTransactions" resultMap="RichTransaction">
        SELECT /*TranscationMapper.getAllTransactions*/
            transaction_id, date, name, price, memo, category_id, subcategory_id
        FROM transaction
    </select>

    <select id="getTransactionById" resultMap="RichTransaction">
        SELECT /*TranscationMapper.getTransactionById*/
            transaction_id, date, name, price, memo, category_id, subcategory_id
        FROM transaction
        WHERE transaction_id = #{id}
    </select>

    <select id="getTransactionsByPeriodId" resultMap="RichTransaction">
        SELECT /*TransactionMapper.getTransactionsByPeriodId*/
            t.transaction_id, t.date, t.name, t.price, t.memo, t.category_id, t.subcategory_id
        FROM allocation a
        JOIN transaction t ON a.category_id = t.category_id
        WHERE a.period_id = #{id}
        ORDER BY t.date DESC, t.transaction_id DESC
    </select>

    <select id="getTransactionsByCategoryIdAndPeriodId" resultMap="Transaction">
        SELECT /*TransactionMapper.getTransactionsByCategoryIdAndPeriodId*/
            t.transaction_id, t.date, t.name, t.price, t.memo
        FROM period AS p
        JOIN allocation AS a ON p.period_id = a.period_id
        JOIN category AS c ON a.category_id = c.category_id
        JOIN transaction AS t ON c.category_id = t.category_id
            AND t.date &gt;= p.start_date AND t.date &lt;= p.end_date
        WHERE p.period_id = #{periodId}
        AND a.category_id = #{categoryId}
    </select>

    <select id="searchTransactions" resultMap="RichTransaction">

    </select>

    <insert id="createTransaction">
        INSERT INTO /* TransactionMapper.createTransaction */
            transaction
        (date, name, price, memo, category_id, subcategory_id)
        VALUES (
            #{date},
            #{name},
            #{price},
            #{memo},
            #{categoryId},
            #{subcategoryId}
        )
    </insert>

    <delete id="deleteTransaction">
        DELETE FROM /* TransactionMapper.deleteTransaction */
        transaction
        WHERE transaction_id = #{id}
    </delete>

</mapper>